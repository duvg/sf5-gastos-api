App\Entity\Group:
  attributes:
    normalization_context:
      groups: ['group_read']
  collectionOperations:
    get:
      method: 'GET'
      security: 'is_granted("GROUP_READ")'
    post:
      method: 'POST'
      security: 'is_granted("GROUP_CREATE")'
      denormalization_context:
        groups: ['group_post']
      openapi_context:
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  owner:
                    type: string

  itemOperations:
    get:
      method: 'GET'
      security: 'is_granted("GROUP_READ", object)'
    put:
      method: 'PUT'
      security: 'is_granted("GROUP_UPDATE", object)'
      denormalization_context:
        groups: ['group_put']
      openapi_context:
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string

    delete:
      method: 'DELETE'
      security: 'is_granted("GROUP_DELETE", object)'

  properties:
    categories:
      subresource:
        subresourceClass: 'App\Entity\Category'
        collection: true
        maxDepth: 1
    expenses:
      subresource:
        subresourceClass: 'App\Entity\Expense'
        collection: true
        maxDepth: 1